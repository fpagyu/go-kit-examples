// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/resultcode.proto

package pbcommon

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type R int32

const (
	// 0-100 保留
	R_OK                 R = 0
	R_SYS_ERR            R = 1
	R_MYSQL_ERR          R = 2
	R_REDIS_ERR          R = 3
	R_NETWORK_ERR        R = 4
	R_UNKNOWN_ERR        R = 5
	R_RPC_ERR            R = 6
	R_JSON_UNMARSHAL_ERR R = 7
	// 101...
	R_INVALID_ARGS R = 101
)

var R_name = map[int32]string{
	0:   "OK",
	1:   "SYS_ERR",
	2:   "MYSQL_ERR",
	3:   "REDIS_ERR",
	4:   "NETWORK_ERR",
	5:   "UNKNOWN_ERR",
	6:   "RPC_ERR",
	7:   "JSON_UNMARSHAL_ERR",
	101: "INVALID_ARGS",
}

var R_value = map[string]int32{
	"OK":                 0,
	"SYS_ERR":            1,
	"MYSQL_ERR":          2,
	"REDIS_ERR":          3,
	"NETWORK_ERR":        4,
	"UNKNOWN_ERR":        5,
	"RPC_ERR":            6,
	"JSON_UNMARSHAL_ERR": 7,
	"INVALID_ARGS":       101,
}

func (x R) String() string {
	return proto.EnumName(R_name, int32(x))
}

func (R) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b3593cd94cbba334, []int{0}
}

func init() {
	proto.RegisterEnum("pbcommon.R", R_name, R_value)
}

func init() {
	proto.RegisterFile("common/resultcode.proto", fileDescriptor_b3593cd94cbba334)
}

var fileDescriptor_b3593cd94cbba334 = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4f, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2f, 0x4a, 0x2d, 0x2e, 0xcd, 0x29, 0x49, 0xce, 0x4f, 0x49, 0xd5, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x28, 0x48, 0x82, 0x48, 0x69, 0xf5, 0x33, 0x72, 0x31, 0x06, 0x09,
	0xb1, 0x71, 0x31, 0xf9, 0x7b, 0x0b, 0x30, 0x08, 0x71, 0x73, 0xb1, 0x07, 0x47, 0x06, 0xc7, 0xbb,
	0x06, 0x05, 0x09, 0x30, 0x0a, 0xf1, 0x72, 0x71, 0xfa, 0x46, 0x06, 0x07, 0xfa, 0x80, 0xb9, 0x4c,
	0x20, 0x6e, 0x90, 0xab, 0x8b, 0x27, 0x44, 0x96, 0x59, 0x88, 0x9f, 0x8b, 0xdb, 0xcf, 0x35, 0x24,
	0xdc, 0x3f, 0xc8, 0x1b, 0x2c, 0xc0, 0x02, 0x12, 0x08, 0xf5, 0xf3, 0xf6, 0xf3, 0x0f, 0xf7, 0x03,
	0x0b, 0xb0, 0x82, 0x0c, 0x0b, 0x0a, 0x70, 0x06, 0x73, 0xd8, 0x84, 0xc4, 0xb8, 0x84, 0xbc, 0x82,
	0xfd, 0xfd, 0xe2, 0x43, 0xfd, 0x7c, 0x1d, 0x83, 0x82, 0x3d, 0x1c, 0x21, 0xa6, 0xb2, 0x0b, 0x09,
	0x70, 0xf1, 0x78, 0xfa, 0x85, 0x39, 0xfa, 0x78, 0xba, 0xc4, 0x3b, 0x06, 0xb9, 0x07, 0x0b, 0xa4,
	0x3a, 0x29, 0x47, 0x29, 0x66, 0xa4, 0xe6, 0xe4, 0xe4, 0xeb, 0x17, 0x24, 0xe9, 0xa7, 0xa7, 0xe6,
	0xe9, 0xa6, 0x83, 0x58, 0x10, 0xd7, 0x5a, 0xc3, 0x18, 0x49, 0x6c, 0x60, 0x7f, 0x18, 0x03, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x6a, 0xdb, 0xea, 0xb2, 0xe2, 0x00, 0x00, 0x00,
}
