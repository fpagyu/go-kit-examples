// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.5.0
// source: hello.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	pbcommon "hello/pb/gen-go/pbcommon"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SayHiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseReq *pbcommon.BaseReq `protobuf:"bytes,1,opt,name=base_req,json=baseReq,proto3" json:"base_req,omitempty"`
	Name    string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SayHiRequest) Reset() {
	*x = SayHiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hello_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SayHiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SayHiRequest) ProtoMessage() {}

func (x *SayHiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hello_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SayHiRequest.ProtoReflect.Descriptor instead.
func (*SayHiRequest) Descriptor() ([]byte, []int) {
	return file_hello_proto_rawDescGZIP(), []int{0}
}

func (x *SayHiRequest) GetBaseReq() *pbcommon.BaseReq {
	if x != nil {
		return x.BaseReq
	}
	return nil
}

func (x *SayHiRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SayHiReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRsp *pbcommon.BaseRsp `protobuf:"bytes,2,opt,name=base_rsp,json=baseRsp,proto3" json:"base_rsp,omitempty"`
	Reply   string            `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *SayHiReply) Reset() {
	*x = SayHiReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hello_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SayHiReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SayHiReply) ProtoMessage() {}

func (x *SayHiReply) ProtoReflect() protoreflect.Message {
	mi := &file_hello_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SayHiReply.ProtoReflect.Descriptor instead.
func (*SayHiReply) Descriptor() ([]byte, []int) {
	return file_hello_proto_rawDescGZIP(), []int{1}
}

func (x *SayHiReply) GetBaseRsp() *pbcommon.BaseRsp {
	if x != nil {
		return x.BaseRsp
	}
	return nil
}

func (x *SayHiReply) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

type MakeADateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseReq  *pbcommon.BaseReq `protobuf:"bytes,1,opt,name=base_req,json=baseReq,proto3" json:"base_req,omitempty"`
	DateTime int64             `protobuf:"varint,2,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	WantSay  string            `protobuf:"bytes,3,opt,name=want_say,json=wantSay,proto3" json:"want_say,omitempty"`
}

func (x *MakeADateReq) Reset() {
	*x = MakeADateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hello_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeADateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeADateReq) ProtoMessage() {}

func (x *MakeADateReq) ProtoReflect() protoreflect.Message {
	mi := &file_hello_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeADateReq.ProtoReflect.Descriptor instead.
func (*MakeADateReq) Descriptor() ([]byte, []int) {
	return file_hello_proto_rawDescGZIP(), []int{2}
}

func (x *MakeADateReq) GetBaseReq() *pbcommon.BaseReq {
	if x != nil {
		return x.BaseReq
	}
	return nil
}

func (x *MakeADateReq) GetDateTime() int64 {
	if x != nil {
		return x.DateTime
	}
	return 0
}

func (x *MakeADateReq) GetWantSay() string {
	if x != nil {
		return x.WantSay
	}
	return ""
}

type MakeADateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRsp *pbcommon.BaseRsp `protobuf:"bytes,2,opt,name=base_rsp,json=baseRsp,proto3" json:"base_rsp,omitempty"`
	Reply   string            `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *MakeADateRsp) Reset() {
	*x = MakeADateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hello_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeADateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeADateRsp) ProtoMessage() {}

func (x *MakeADateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_hello_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeADateRsp.ProtoReflect.Descriptor instead.
func (*MakeADateRsp) Descriptor() ([]byte, []int) {
	return file_hello_proto_rawDescGZIP(), []int{3}
}

func (x *MakeADateRsp) GetBaseRsp() *pbcommon.BaseRsp {
	if x != nil {
		return x.BaseRsp
	}
	return nil
}

func (x *MakeADateRsp) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

var File_hello_proto protoreflect.FileDescriptor

var file_hello_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x50, 0x0a, 0x0c, 0x53, 0x61, 0x79, 0x48, 0x69, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x07, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x0a, 0x53, 0x61, 0x79, 0x48,
	0x69, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72,
	0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x73, 0x70, 0x52, 0x07, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x74, 0x0a, 0x0c, 0x4d, 0x61,
	0x6b, 0x65, 0x41, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52,
	0x07, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x61,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x61, 0x6e, 0x74, 0x53, 0x61, 0x79,
	0x22, 0x52, 0x0a, 0x0c, 0x4d, 0x61, 0x6b, 0x65, 0x41, 0x44, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70,
	0x12, 0x2c, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x73, 0x70, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x52, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x32, 0x63, 0x0a, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x29, 0x0a,
	0x05, 0x53, 0x61, 0x79, 0x48, 0x69, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x79, 0x48,
	0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61,
	0x79, 0x48, 0x69, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x09, 0x4d, 0x61, 0x6b, 0x65,
	0x41, 0x44, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x41,
	0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x6b,
	0x65, 0x41, 0x44, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x42, 0x17, 0x5a, 0x15, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x2f, 0x70, 0x62, 0x2f, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x62, 0x3b,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hello_proto_rawDescOnce sync.Once
	file_hello_proto_rawDescData = file_hello_proto_rawDesc
)

func file_hello_proto_rawDescGZIP() []byte {
	file_hello_proto_rawDescOnce.Do(func() {
		file_hello_proto_rawDescData = protoimpl.X.CompressGZIP(file_hello_proto_rawDescData)
	})
	return file_hello_proto_rawDescData
}

var file_hello_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_hello_proto_goTypes = []interface{}{
	(*SayHiRequest)(nil),     // 0: pb.SayHiRequest
	(*SayHiReply)(nil),       // 1: pb.SayHiReply
	(*MakeADateReq)(nil),     // 2: pb.MakeADateReq
	(*MakeADateRsp)(nil),     // 3: pb.MakeADateRsp
	(*pbcommon.BaseReq)(nil), // 4: pbcommon.BaseReq
	(*pbcommon.BaseRsp)(nil), // 5: pbcommon.BaseRsp
}
var file_hello_proto_depIdxs = []int32{
	4, // 0: pb.SayHiRequest.base_req:type_name -> pbcommon.BaseReq
	5, // 1: pb.SayHiReply.base_rsp:type_name -> pbcommon.BaseRsp
	4, // 2: pb.MakeADateReq.base_req:type_name -> pbcommon.BaseReq
	5, // 3: pb.MakeADateRsp.base_rsp:type_name -> pbcommon.BaseRsp
	0, // 4: pb.Hello.SayHi:input_type -> pb.SayHiRequest
	2, // 5: pb.Hello.MakeADate:input_type -> pb.MakeADateReq
	1, // 6: pb.Hello.SayHi:output_type -> pb.SayHiReply
	3, // 7: pb.Hello.MakeADate:output_type -> pb.MakeADateRsp
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_hello_proto_init() }
func file_hello_proto_init() {
	if File_hello_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hello_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SayHiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hello_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SayHiReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hello_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeADateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hello_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeADateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hello_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hello_proto_goTypes,
		DependencyIndexes: file_hello_proto_depIdxs,
		MessageInfos:      file_hello_proto_msgTypes,
	}.Build()
	File_hello_proto = out.File
	file_hello_proto_rawDesc = nil
	file_hello_proto_goTypes = nil
	file_hello_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HelloClient is the client API for Hello service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloClient interface {
	SayHi(ctx context.Context, in *SayHiRequest, opts ...grpc.CallOption) (*SayHiReply, error)
	// 约会
	MakeADate(ctx context.Context, in *MakeADateReq, opts ...grpc.CallOption) (*MakeADateRsp, error)
}

type helloClient struct {
	cc grpc.ClientConnInterface
}

func NewHelloClient(cc grpc.ClientConnInterface) HelloClient {
	return &helloClient{cc}
}

func (c *helloClient) SayHi(ctx context.Context, in *SayHiRequest, opts ...grpc.CallOption) (*SayHiReply, error) {
	out := new(SayHiReply)
	err := c.cc.Invoke(ctx, "/pb.Hello/SayHi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helloClient) MakeADate(ctx context.Context, in *MakeADateReq, opts ...grpc.CallOption) (*MakeADateRsp, error) {
	out := new(MakeADateRsp)
	err := c.cc.Invoke(ctx, "/pb.Hello/MakeADate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloServer is the server API for Hello service.
type HelloServer interface {
	SayHi(context.Context, *SayHiRequest) (*SayHiReply, error)
	// 约会
	MakeADate(context.Context, *MakeADateReq) (*MakeADateRsp, error)
}

// UnimplementedHelloServer can be embedded to have forward compatible implementations.
type UnimplementedHelloServer struct {
}

func (*UnimplementedHelloServer) SayHi(context.Context, *SayHiRequest) (*SayHiReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHi not implemented")
}
func (*UnimplementedHelloServer) MakeADate(context.Context, *MakeADateReq) (*MakeADateRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeADate not implemented")
}

func RegisterHelloServer(s *grpc.Server, srv HelloServer) {
	s.RegisterService(&_Hello_serviceDesc, srv)
}

func _Hello_SayHi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SayHiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServer).SayHi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Hello/SayHi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServer).SayHi(ctx, req.(*SayHiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hello_MakeADate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakeADateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServer).MakeADate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Hello/MakeADate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServer).MakeADate(ctx, req.(*MakeADateReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hello_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Hello",
	HandlerType: (*HelloServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHi",
			Handler:    _Hello_SayHi_Handler,
		},
		{
			MethodName: "MakeADate",
			Handler:    _Hello_MakeADate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hello.proto",
}
